class Particle {
  float posX=1, posY=1, in, theta=0;
  color  c;
  
  Particle(float x, float y, color c) {
    posX = x;
    posY = y;
    this.c = c;
  }
  
  public void move() {
    update();
    checkEdge();
    display();
  }
  
  void update() {
    in +=  0.01;
    theta = noise(posX*0.01 , posY*0.01 , in) * TWO_PI;
    
    if(key=='1'){
 posX += sq(2 * cos(theta)-cos(2*theta));
 posY += sq(2 * sin(theta)-sin(2*theta));
    }
    
    if(key=='2'){
 posX += 2 * cos(theta)-cos(2*theta);
 posY += 2 * sin(theta)-sin(2*theta);
    }
    
        if(key=='3'){
 posX += sq(5 * cos(theta)-cos(2*theta));
 posY += sq(5 * sin(theta)-sin(2*theta));
    }
    
        if(key=='4'){
 posX += 20 * cos(theta)-cos(2*theta);
 posY += 20 * sin(theta)-sin(2*theta);
    }
    
        if(key=='5'){
 posX += 2 * cos(theta)+cos(20*theta);
 posY += 2 * sin(theta)+sin(20*theta);
    }
    
        if(key=='6'){
 posX += sqrt(abs(2 * cos(theta)-cos(2*theta)));
 posY += sqrt(abs(2 * sin(theta)-sin(2*theta)));
 

    }
    
    if(key=='7'){
 posX += mouseX/50 * cos(theta)-cos(mouseY/50*theta);
 posY +=mouseY/50* sin(theta)-sin(mouseX/50*theta);
 

    }
    
    if(key=='8'){
 posX -= cos(20*theta);
 posY -= sin(20*theta);
 

    }
 // posX+=sqrt(sq(posX-600)+sq(posY-600))*cos(theta)-cos(2*theta);
  //  posY+=sqrt(sq(posX-600)+sq(posY-600))*sin(theta)-sin(2*theta);
}
